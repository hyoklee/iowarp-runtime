template<typename ...Args>
HSHM_CROSS_FUN
hipc::FullPtr<CUSTOM##Task> Async##CUSTOM##Alloc(const hipc::MemContext &mctx, 
                                                  const TaskNode &task_node,
                                                  const DomainQuery &dom_query,
                                                  Args&& ...args) {
  hipc::FullPtr<CUSTOM##Task> task =
    CHI_CLIENT->NewTask<CUSTOM##Task>(mctx, task_node, id_, dom_query, std::forward<Args>(args)...);
  return task;
}

template<typename ...Args>
HSHM_CROSS_FUN
hipc::FullPtr<CUSTOM##Task>
Async##CUSTOM(const hipc::MemContext &mctx, Args&& ...args) {
  return CHI_CLIENT->ScheduleNewTask<CUSTOM##Task>(mctx, id_, std::forward<Args>(args)...);
}

template<typename ...Args>
HSHM_CROSS_FUN
hipc::FullPtr<CUSTOM##Task>
Async##CUSTOM##Base(const hipc::MemContext &mctx, chi::Task *parent, const chi::TaskNode &task_node, Args&& ...args) {
  return CHI_CLIENT->ScheduleNewTask<CUSTOM##Task>(mctx, parent, task_node, id_, std::forward<Args>(args)...);
}